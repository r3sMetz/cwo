//Default Mixin for Breakpoint
@mixin breakpoint($width:$screen-md,$minOrMax:'min-width') {
  @media screen and ($minOrMax : $width) {
    @content;
  }
}

//Default Mixin for Orientation
@mixin orientation($orientaion) {
  @media screen and (orientation : $orientaion) {
    @content;
  }
}

//Margin (Top or Bottom) not for Last-Child
@mixin notForLastChild($direction:'bottom'){
  &:last-child {
    @if$direction=='top'{
      margin-top: 0;
    }
    @else {
      margin-bottom: 0;
    }
  }
}

@mixin noPseudoClasses($link-color) {
  &:hover, &:active, &:visited, &:focus {
    color: $link-color;
    outline: none;
    border: 0;
    text-decoration: none;
  }
}

//Show Hover only on non-mobile devices
@mixin noTouchHover {
  @include breakpoint {
    &:hover {
      @content;
    }
  }
}

//One Property - Different Breakpoints
@mixin propertyBreakpoint($property,$std,$sm,$md,$lg,$xl) {
  #{$property} : $std;
  @if $std != false {
    #{$property} : $std;
  }
  @if $sm != false {
    @include breakpoint($screen-sm) {
      #{$property} : $sm;
    }
  }

  @if $md != false {
    @include breakpoint($screen-md) {
      #{$property} : $md;
    }
  }

  @if $lg != false {
    @include breakpoint($screen-lg) {
      #{$property} : $lg;
    }
  }

  @if $xl != false {
    @include breakpoint($screen-xl) {
      #{$property} : $xl;
    }
  }
}

//Mixin for Slider-Nav-Buttons (Mobile sizing)
@mixin sliderNavWidth($property){
  #{$property} : 30px;

  @include breakpoint($screen-lg) {
      #{$property} : 20px;
  }
}

//Build Dashed Headline
@mixin buildDashedHeadline(){
  display: flex;
  justify-content: center;
  .dashed_text{
    flex: 1;
    padding: 0 $gap-md;
  }
  .dashed_line{
    height: 1px;
    background: $color-white;
    flex: 2;
    margin-top: 2px;
    &:first-child{
      margin-right: auto;
    }
    &:last-child {
      margin-left: auto;
    }
  }

  &.padded{
    padding: 0 15px;
  }
}

// Gradient
@mixin linear-gradient($from, $to) {
  background: $to;
	background: -moz-linear-gradient(top, $from 0%, $to 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$from), color-stop(100%,$to));
	background: -webkit-linear-gradient(top, $from 0%,$to 100%);
	background: -o-linear-gradient(top, $from 0%,$to 100%);
	background: linear-gradient(to bottom, $from 0%,$to 100%);
	filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=#{$from}, endColorstr=#{$to})
}

@mixin placeholder () {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}
}